rules:
  indent:
    - 2
    - 2
  quotes:
    - 2
    - single
  linebreak-style:
    - 2
    - unix
  semi:
    - 2
    - always
  array-bracket-spacing: 
    - 2
    - never
  block-scoped-var: 2
  brace-style: 
    - 2
    - stroustrup
    - 
      allowSingleLine: true
  comma-dangle: 
    - 2
    - always-multiline
  comma-spacing: 2
  comma-style: 
    - 2
    - last
  computed-property-spacing: 
    - 2
    - never
  curly: 
    - 2
    - multi-line
  dot-notation:
    - 2
    -
      allowKeywords: true
  eol-last: 2
  eqeqeq: 
    - 2
    - smart
  guard-for-in: 2
  indent: 
    - 2
    - 2
    - 
      SwitchCase: 1
  key-spacing: 
    - 2
    - 
      beforeColon: false
      afterColon: true
  linebreak-style: 
    - 2
    - unix
  lines-around-comment: 
    - 2
    - 
      beforeBlockComment: true
      afterBlockComment: false
  new-parens: 2
  no-array-constructor: 2
  no-caller: 2
  no-catch-shadow: 2
  no-empty-label: 2
  no-eval: 2
  no-extend-native: 2
  no-extra-bind: 2
  no-extra-parens: 
    - 2
    - functions
  no-implied-eval: 2
  no-iterator: 2
  no-label-var: 2
  no-labels: 2
  no-lone-blocks: 2
  no-loop-func: 2
  no-multi-spaces: 2
  no-multi-str: 2
  no-native-reassign: 2
  no-nested-ternary: 2
  no-new-func: 2
  no-new-object: 2
  no-new-wrappers: 2
  no-octal-escape: 2
  no-process-exit: 2
  no-proto: 2
  no-return-assign: 2
  no-script-url: 2
  no-sequences: 2
  no-shadow-restricted-names: 2
  no-spaced-func: 2
  no-trailing-spaces: 2
  no-undef-init: 2
  no-undefined: 2
  no-unused-expressions: 2
  no-unused-vars: 
    - 2
    - 
      vars: all
      args: none
  no-use-before-define:
    - 2
    - nofunc
  no-with: 2
  object-curly-spacing: 
    - 2
    - never
  one-var: 
    - 2
    - never
  quote-props: 
    - 2
    - consistent-as-needed
  semi-spacing: 
    - 2
    - 
      before: false
      after: true
  space-after-keywords: 
    - 2
    - always
  space-before-blocks: 
    - 2
    - always
  space-before-function-paren: 
    - 2
    -
      anonymous: never
      named: never
  space-in-parens: 
    - 2
    - never
  space-infix-ops: 2
  space-return-throw-case: 2
  space-unary-ops: 
    - 2
    - 
      words: true
      nonwords: false
  spaced-comment: 
    - 2
    - always
  strict:
    - 2
    - global 
  yoda: 
    - 2
    - never
  max-nested-callbacks: 
    - 1
    - 6
  valid-jsdoc:
    - 1
    -
      requireReturn: false
      prefer:
        returns: return
  no-inline-comments:
    - 2
  no-lonely-if:
    - 2
  camelcase:
    - 2
    - { properties: never }
  no-console: 0
env:
  es6: true
  node: true
extends: 'eslint:recommended'
globals:
  # Methods for mocha tests.
  describe: true
  it: true
  before: true
  beforeEach: true
  after: true
  afterEach: true
  # The rule exists for front-end projects which share the same rules.
  angular: true
